$date
	Sat Dec 23 11:47:46 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test_adder $end
$var wire 1 ! sum $end
$var wire 1 " cout $end
$var reg 1 # a $end
$var reg 1 $ b $end
$var reg 1 % cin $end
$scope module adder $end
$var wire 1 # a $end
$var wire 1 $ b $end
$var wire 1 % cin $end
$var wire 1 " cout $end
$var wire 1 ! sum $end
$var wire 1 & s1 $end
$var wire 1 ' c2 $end
$var wire 1 ( c1 $end
$scope module ms1 $end
$var wire 1 # a $end
$var wire 1 $ b $end
$var wire 1 ( carry $end
$var wire 1 & sum $end
$upscope $end
$scope module ms2 $end
$var wire 1 & a $end
$var wire 1 % b $end
$var wire 1 ' carry $end
$var wire 1 ! sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x(
x'
x&
x%
x$
x#
x"
x!
$end
#10
0!
0"
0&
0(
0'
0$
0#
0%
#20
1!
1&
1$
#30
0$
1#
#40
0!
1"
0&
1(
1$
#50
0"
0(
1!
0$
0#
1%
#60
1"
0!
1'
1&
1$
#70
0$
1#
#80
1!
0'
0&
1(
1$
#90
